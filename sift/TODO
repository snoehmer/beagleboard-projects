+ debugging-facilities
+ time-measuring class
+ get sift in lib running...
+ error handling (exceptions??)

+ eventuell noch mehr sift time measure zeugs hinzufügen?
+ sift testbilder zusammenstellen -> verschiedene auflösungen
+ tests durchlaufen lassen -> 2x?

+ dsp build
+ vlfeat zur gänze auf dsp?
+ DSP classe: Initialisierung
+ getmessage im dspnode
+ test der neuen alloc funktionen und gesamten dsp klasse anhand von dsphellow.cpp
+  dazu noch im Dsp/DspNode fehlende Funktionen
+  implementieren (runnode, terminatenode, sendmessage...)
+  invalidate memfunktionen in dsp.cpp rein!!!
+ vlfeat initialisieren (mem-funktionen ...)
- vlfeat auch im DSP initialisieren!!! ???
- mem allocation in sift.cpp
- special vl include for dsp progs, this include should only include the necessary types
  OR #ifdef BATTLE??? :)


-in case of free realloc usw. ... gets memory freed AND UNMAPPED????